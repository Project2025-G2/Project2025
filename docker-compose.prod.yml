version: '3.8'

networks:
  app-network:
    driver: bridge

services:
  client:
    build:
      context: ./client  # Шлях до клієнтського Dockerfile
    restart: always
    ports:
      - "3000:3000"  # Проксіюємо порт 3000 хоста на контейнер
    depends_on:
      - server  # Запускаємо клієнт тільки після сервера
    env_file:
      - .env
    networks:
      - app-network

  server:
    build:
      context: ./server  # Шлях до серверного Dockerfile
    restart: always
    ports:
      - "5000:5000"  # Проксіюємо порт 5000 хоста на контейнер
    env_file:
      - .env
    networks:
      - app-network

  nginx:
    image: nginx:stable
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./client/build:/usr/share/nginx/html
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - client
      - server
    networks:
      - app-network

  db:
    image: postgres:15
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    networks:
      - app-network
    env_file:
      - .env


  redis:
    image: redis:alpine
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 15s
      timeout: 3s
      retries: 5
    networks:
      - app-network


volumes:
  pg_data: