# .github/workflows/ci-cd.yml
name: CI/CD Pipeline

on:
  push:
    branches:
      - dev
      - feature/ci-test
  pull_request:
    branches:
      - dev

jobs:
  ci:
    name: ðŸ§ª CI: Lint, Tests & Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Super-Linter
        uses: github/super-linter@v5
        env:
          VALIDATE_ALL_CODEBASE: true
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          FILTER_REGEX_INCLUDE: '.*\.(js|jsx|ts|tsx)$'
          DEFAULT_BRANCH: dev

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install server deps & Run server tests
        working-directory: ./server
        run: |
          npm install
          npm test

      - name: Install client deps & Run client tests
        working-directory: ./client
        run: |
          npm install
          CI=true npm test

      - name: Build frontend
        working-directory: ./client
        run: |
          CI=false npm run build

  cd:
    name: ðŸš€ CD: Build, Push & Deploy
    needs: ci
    runs-on: ubuntu-latest
    if: |
      github.ref == 'refs/heads/dev' ||
      github.ref == 'refs/heads/feature/ci-test'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU (multi-arch support)
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/project2025:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/project2025:${{ github.sha }}

      - name: Deploy to AWS EC2
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            set -e
            cd /home/ubuntu/Project2025
            echo "Pull latest Docker image"
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/project2025:latest
            echo "Stop and remove old containers"
            sudo docker-compose -f docker-compose.dev.yml down --remove-orphans
            echo "Start new containers"
            sudo docker-compose -f docker-compose.dev.yml up -d --build
            echo "Cleanup unused images"
            sudo docker image prune -f
