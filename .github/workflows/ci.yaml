name: CI (Lint + Tests + Build + Deploy)

on:
  push:
    branches:
      - dev
      - ci-test
  pull_request:
    branches:
      - dev

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: node:18


    steps:
      # 1. Checkout the code
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Run Super-Linter
      - name: Run Super-Linter
        uses: github/super-linter@v5
        env:
          VALIDATE_ALL_CODEBASE: true
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_JAVASCRIPT_ES: true
          DEFAULT_BRANCH: dev
          FILTER_REGEX_INCLUDE: .*\.(js|jsx)$
          JAVASCRIPT_ES_CONFIG_FILE: .eslintrc.json
          JAVASCRIPT_DEFAULT_STYLE: prettier
          LINTER_RULES_PATH: /

      # 3. Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      # 4. Install dependencies
      - name: Install dependencies
        run: npm run install-dep

      # 5. Build frontend
      - name: Build frontend
        working-directory: ./client
        run: npm run build

      # 6. Load .env.local if running in act
      - name: Load .env from server/ if running in act
        if: env.ACT == 'true'
        run: |
          echo "Detected act, loading server/.env"
          export $(grep -v '^#' ./server/.env | xargs)
          echo "MONGO_URI=$MONGO_URI" >> $GITHUB_ENV



      # 7. Set MONGO_URI from GitHub secret (only if not using act)
      - name: Set MONGO_URI from secrets
        if: env.ACT != 'true'
        run: echo "MONGO_URI=${{ secrets.DB_LINK }}" >> $GITHUB_ENV

      # 8. Start backend server and test it
      - name: Start and test backend server
        working-directory: ./server
        env:
          MONGO_URI: ${{ env.MONGO_URI }}
        run: |
          npm start &
          sleep 10
          curl --retry 5 --retry-delay 3 --fail http://localhost:5000/api


      # 10. Log in to Docker Hub
      - name: Log in to Docker Hub
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      # 11. Build and Push Docker Image
      - name: Build and Push Docker Image
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          MONGO_URI: ${{ env.MONGO_URI }}
        run: |
          docker build --build-arg MONGO_URI=${MONGO_URI} -t ${{ secrets.DOCKER_USERNAME }}/project2025:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/project2025:latest
