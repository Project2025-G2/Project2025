# .github/workflows/ci-cd.yml
name: CI (Lint + Tests + Build + Publish + Deploy)

on:
  push:
    branches:
      - dev
      - feature/ci-test
  pull_request:
    branches:
      - dev

jobs:
  build-and-test:
    name: üõ† Build & Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Super-Linter
        uses: github/super-linter@v5
        env:
          VALIDATE_ALL_CODEBASE: true
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_JAVASCRIPT_ES: true
          DEFAULT_BRANCH: dev
          FILTER_REGEX_INCLUDE: '.*\.(js|jsx|ts|tsx)$'
          JAVASCRIPT_ES_CONFIG_FILE: .eslintrc.json
          JAVASCRIPT_DEFAULT_STYLE: prettier
          LINTER_RULES_PATH: /

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install server dependencies
        working-directory: ./server
        run: npm install

      - name: Install client dependencies
        working-directory: ./client
        run: npm install

      - name: Build frontend
        working-directory: ./client
        run: CI=false npm run build

  publish-image:
    name: üì¶ Build & Push Docker Image
    needs: build-and-test
    runs-on: ubuntu-latest
    if: |
      github.ref == 'refs/heads/dev' ||
      github.ref == 'refs/heads/feature/ci-test'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/project2025:latest
            ${{ secrets.DOCKER_USERNAME }}/project2025:${{ github.sha }}

  deploy:
    name: üöÄ Deploy to AWS EC2
    needs: publish-image
    runs-on: ubuntu-latest
    if: |
      github.ref == 'refs/heads/dev' ||
      github.ref == 'refs/heads/feature/ci-test'
    steps:
      - name: SSH Deploy via appleboy
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            set -e
            cd /home/ubuntu/Project2025

            echo "Pull latest image from Docker Hub"
            sudo docker pull sushchuk/project2025:latest

            echo "Stop and remove old containers"
            sudo docker-compose -f docker-compose.dev.yml down --remove-orphans

            echo "–ó–∞–ø—É—Å–∫ –Ω–æ–≤–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ñ–≤ –∑ –æ–Ω–æ–≤–ª–µ–Ω–∏–º –æ–±—Ä–∞–∑–æ–º"
            # –ü—Ä–∏–ø—É—Å–∫–∞—î–º–æ, —â–æ –≤ docker-compose.dev.yml –≤–∏ –≤–∫–∞–∑—É—î—Ç–µ image: –≤–∞—à_—Ä–µ—î—Å—Ç—Ä/–ø—Ä–æ–µ–∫—Ç:latest
            sudo docker-compose -f docker-compose.dev.yml up -d   

            echo "Cleanup unused images"
            sudo docker image prune -f
