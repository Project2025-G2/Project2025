name: CI (Lint + Tests + Build + Deploy)

on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - dev

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout the code
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Run Super-Linter
      - name: Run Super-Linter
        uses: github/super-linter@v5
        env:
          VALIDATE_ALL_CODEBASE: true
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_JAVASCRIPT_ES: true
          DEFAULT_BRANCH: dev
          FILTER_REGEX_INCLUDE: .*\.(js|jsx)$
          JAVASCRIPT_ES_CONFIG_FILE: .eslintrc.json
          JAVASCRIPT_DEFAULT_STYLE: prettier
          LINTER_RULES_PATH: /

      # 3. Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      # 4. Install dependencies
      - name: Install dependencies
        run: npm run install-dep

      # 5. Build frontend
      - name: Build frontend
        working-directory: ./client
        run: npm run build

      # 6. Start backend server
      - name: Start backend server
        working-directory: ./server
        env:
          MONGO_URI: ${{ secrets.DB_LINK }}
        run: |
          npm start &
          sleep 15

      # 7. Test backend server
      - name: Test backend server is running
        run: |
          curl --fail http://localhost:5000/api || exit 1

      # 8. Log in to Docker Hub
      - name: Log in to Docker Hub
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      # 9. Build Docker image
      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/project2025:latest .

      # 10. Push Docker image to Docker Hub
      - name: Push Docker image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/project2025:latest